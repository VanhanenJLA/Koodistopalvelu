// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    /// <summary>
    /// CodeServer classification version
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class VersionObject : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Validity beginning date without time part.</summary>
        public Date? BeginDate { get; set; }
        /// <summary>Classification identifier</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ClassificationId { get; set; }
#nullable restore
#else
        public string ClassificationId { get; set; }
#endif
        /// <summary>Classification name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ClassificationName { get; set; }
#nullable restore
#else
        public string ClassificationName { get; set; }
#endif
        /// <summary>Classification version concept code fields</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.Field>? Definitions { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.Field> Definitions { get; set; }
#endif
        /// <summary>Validity expiration date without time part.</summary>
        public Date? ExpirationDate { get; set; }
        /// <summary>Type of hierarchy validation. Only relevant for versions in hierarchical classifications.</summary>
        public global::ApiSdk.Models.Version_hierarchyIntegrity? HierarchyIntegrity { get; set; }
        /// <summary>Optional names for hierarchy levels. Only relevant for versions in hierarchical classifications.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? HierarchyLevelNames { get; set; }
#nullable restore
#else
        public List<string> HierarchyLevelNames { get; set; }
#endif
        /// <summary>Name of last modifier.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastModifiedBy { get; set; }
#nullable restore
#else
        public string LastModifiedBy { get; set; }
#endif
        /// <summary>Last modified date and time.</summary>
        public DateTimeOffset? LastModifiedDate { get; set; }
        /// <summary>Next OID. Only relevant if oidRoot is not empty.</summary>
        public int? NextOid { get; set; }
        /// <summary>Is OID used as concept code id or not. Only relevant if oidRoot is not empty.</summary>
        public bool? Oid2id { get; set; }
        /// <summary>Version OID root</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OidRoot { get; set; }
#nullable restore
#else
        public string OidRoot { get; set; }
#endif
        /// <summary>Concept code status</summary>
        public global::ApiSdk.Models.Status? Status { get; private set; }
        /// <summary>Version identifier</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VersionId { get; set; }
#nullable restore
#else
        public string VersionId { get; set; }
#endif
        /// <summary>Version name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VersionName { get; set; }
#nullable restore
#else
        public string VersionName { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.Models.VersionObject"/> and sets the default values.
        /// </summary>
        public VersionObject()
        {
            AdditionalData = new Dictionary<string, object>();
            Status = global::ApiSdk.Models.Status.ACTIVE;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.VersionObject"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ApiSdk.Models.VersionObject CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.VersionObject();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "beginDate", n => { BeginDate = n.GetDateValue(); } },
                { "classificationId", n => { ClassificationId = n.GetStringValue(); } },
                { "classificationName", n => { ClassificationName = n.GetStringValue(); } },
                { "definitions", n => { Definitions = n.GetCollectionOfObjectValues<global::ApiSdk.Models.Field>(global::ApiSdk.Models.Field.CreateFromDiscriminatorValue)?.AsList(); } },
                { "expirationDate", n => { ExpirationDate = n.GetDateValue(); } },
                { "hierarchyIntegrity", n => { HierarchyIntegrity = n.GetEnumValue<global::ApiSdk.Models.Version_hierarchyIntegrity>(); } },
                { "hierarchyLevelNames", n => { HierarchyLevelNames = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "lastModifiedBy", n => { LastModifiedBy = n.GetStringValue(); } },
                { "lastModifiedDate", n => { LastModifiedDate = n.GetDateTimeOffsetValue(); } },
                { "nextOid", n => { NextOid = n.GetIntValue(); } },
                { "oid2id", n => { Oid2id = n.GetBoolValue(); } },
                { "oidRoot", n => { OidRoot = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::ApiSdk.Models.Status>(); } },
                { "versionId", n => { VersionId = n.GetStringValue(); } },
                { "versionName", n => { VersionName = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateValue("beginDate", BeginDate);
            writer.WriteStringValue("classificationId", ClassificationId);
            writer.WriteStringValue("classificationName", ClassificationName);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.Field>("definitions", Definitions);
            writer.WriteDateValue("expirationDate", ExpirationDate);
            writer.WriteEnumValue<global::ApiSdk.Models.Version_hierarchyIntegrity>("hierarchyIntegrity", HierarchyIntegrity);
            writer.WriteCollectionOfPrimitiveValues<string>("hierarchyLevelNames", HierarchyLevelNames);
            writer.WriteStringValue("lastModifiedBy", LastModifiedBy);
            writer.WriteDateTimeOffsetValue("lastModifiedDate", LastModifiedDate);
            writer.WriteIntValue("nextOid", NextOid);
            writer.WriteBoolValue("oid2id", Oid2id);
            writer.WriteStringValue("oidRoot", OidRoot);
            writer.WriteStringValue("versionId", VersionId);
            writer.WriteStringValue("versionName", VersionName);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

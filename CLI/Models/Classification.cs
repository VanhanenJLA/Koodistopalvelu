// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    /// <summary>
    /// CodeServer classification
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Classification : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Classification attributes</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.AttributeObject>? Attributes { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.AttributeObject> Attributes { get; set; }
#endif
        /// <summary>Classification belongs to these categories</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Category { get; set; }
#nullable restore
#else
        public List<string> Category { get; set; }
#endif
        /// <summary>Classification identifier</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ClassificationId { get; set; }
#nullable restore
#else
        public string ClassificationId { get; set; }
#endif
        /// <summary>Classification name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ClassificationName { get; set; }
#nullable restore
#else
        public string ClassificationName { get; set; }
#endif
        /// <summary>Classification type</summary>
        public global::ApiSdk.Models.Classification_classificationType? ClassificationType { get; set; }
        /// <summary>Classifications default version</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.Classification_defaultVersion? DefaultVersion { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.Classification_defaultVersion DefaultVersion { get; set; }
#endif
        /// <summary>Additional information of classification</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Whether concept codes of this classification has description fields with text formatting</summary>
        public bool? FormattedDescriptionFields { get; set; }
        /// <summary>Is Classification hierarchical or not</summary>
        public bool? Hierarchical { get; set; }
        /// <summary>HATEOAS links to default version and to all versions of this classification</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.Link>? Links { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.Link> Links { get; set; }
#endif
        /// <summary>Whether a publications are prevented from this classification</summary>
        public bool? PublicationsBlocked { get; set; }
        /// <summary>Whether a restricted access is assigned to the classification</summary>
        public bool? RestrictedAccess { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.Models.Classification"/> and sets the default values.
        /// </summary>
        public Classification()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.Classification"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ApiSdk.Models.Classification CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.Classification();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "attributes", n => { Attributes = n.GetCollectionOfObjectValues<global::ApiSdk.Models.AttributeObject>(global::ApiSdk.Models.AttributeObject.CreateFromDiscriminatorValue)?.AsList(); } },
                { "category", n => { Category = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "classificationId", n => { ClassificationId = n.GetStringValue(); } },
                { "classificationName", n => { ClassificationName = n.GetStringValue(); } },
                { "classificationType", n => { ClassificationType = n.GetEnumValue<global::ApiSdk.Models.Classification_classificationType>(); } },
                { "defaultVersion", n => { DefaultVersion = n.GetObjectValue<global::ApiSdk.Models.Classification_defaultVersion>(global::ApiSdk.Models.Classification_defaultVersion.CreateFromDiscriminatorValue); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "formattedDescriptionFields", n => { FormattedDescriptionFields = n.GetBoolValue(); } },
                { "hierarchical", n => { Hierarchical = n.GetBoolValue(); } },
                { "links", n => { Links = n.GetCollectionOfObjectValues<global::ApiSdk.Models.Link>(global::ApiSdk.Models.Link.CreateFromDiscriminatorValue)?.AsList(); } },
                { "publicationsBlocked", n => { PublicationsBlocked = n.GetBoolValue(); } },
                { "restrictedAccess", n => { RestrictedAccess = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.AttributeObject>("attributes", Attributes);
            writer.WriteCollectionOfPrimitiveValues<string>("category", Category);
            writer.WriteStringValue("classificationId", ClassificationId);
            writer.WriteStringValue("classificationName", ClassificationName);
            writer.WriteEnumValue<global::ApiSdk.Models.Classification_classificationType>("classificationType", ClassificationType);
            writer.WriteObjectValue<global::ApiSdk.Models.Classification_defaultVersion>("defaultVersion", DefaultVersion);
            writer.WriteStringValue("description", Description);
            writer.WriteBoolValue("formattedDescriptionFields", FormattedDescriptionFields);
            writer.WriteBoolValue("hierarchical", Hierarchical);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.Link>("links", Links);
            writer.WriteBoolValue("publicationsBlocked", PublicationsBlocked);
            writer.WriteBoolValue("restrictedAccess", RestrictedAccess);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
